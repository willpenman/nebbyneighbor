(function(){const e=document.createElement("link").relList;if(e&&e.supports&&e.supports("modulepreload"))return;for(const n of document.querySelectorAll('link[rel="modulepreload"]'))i(n);new MutationObserver(n=>{for(const s of n)if(s.type==="childList")for(const o of s.addedNodes)o.tagName==="LINK"&&o.rel==="modulepreload"&&i(o)}).observe(document,{childList:!0,subtree:!0});function t(n){const s={};return n.integrity&&(s.integrity=n.integrity),n.referrerPolicy&&(s.referrerPolicy=n.referrerPolicy),n.crossOrigin==="use-credentials"?s.credentials="include":n.crossOrigin==="anonymous"?s.credentials="omit":s.credentials="same-origin",s}function i(n){if(n.ep)return;n.ep=!0;const s=t(n);fetch(n.href,s)}})();function m(h){return`${h.row},${h.col}`}function I(h){return{size:h,neighbors:new Set,prePlacedNeighbors:new Set,forbiddenSquares:new Set,forcedMoves:new Set,moveHistory:[]}}function B(h){return h.moveHistory.length===0?null:h.moveHistory[h.moveHistory.length-1]}const C={name:"Soft Organic",gridLineColor:"#d4b59a",gridLineWidth:1.5,neighborColor:"#27ae60",neighborRadius:.3,backgroundColor:"#fefefe",neighborStyle:"circle",prePlacedNeighborColor:"#8B4513",prePlacedNeighborStyle:"filled-outline",forbiddenSquareStyle:"grid-fade",forbiddenSquareColor:"#e8d5c3",forbiddenSquareOpacity:.5},x=class x{constructor(e,t){this.cellSize=0,this.gridOffset={x:0,y:0},this.panOffset={x:0,y:0},this.theme=C,this.inspectionData=null,this.isPanning=!1,this.lastPanPoint=null,this.panStartPoint=null,this.panDistance=0,this.gridWidth=0,this.lineStyles={solidLineColor:"#8B7355",dashedLineColor:"#A67C5A",lineWidth:2,dashPattern:[6,4],opacity:.9},this.isScrollable=!1,this.warningStyle="headers",this.recentNeighborHighlight={type:"square",backgroundColor:"#A8D4A8",backgroundOpacity:.7,borderColor:null,borderWidth:0,borderOpacity:0},this.canvas=e,this.gridState=t,this.theme=C;const i=e.getContext("2d");if(!i)throw new Error("Could not get 2D context from canvas");this.ctx=i,this.setupCanvas(),this.calculateDimensions(),this.setupPanningEvents()}setupCanvas(){const e=window.devicePixelRatio||1;this.canvas.offsetWidth;const t=this.canvas.getBoundingClientRect();this.canvas.width=t.width*e,this.canvas.height=t.height*e,this.ctx.scale(e,e)}calculateDimensions(){const e=this.canvas.getBoundingClientRect(),t=e.width<500?2:40,i=0,n=e.width<500?2:40,s=e.width-t*2,o=e.height-i-n,r=Math.min(s,o),l=r/this.gridState.size;console.log(`Canvas: ${e.width}×${e.height}, Available: ${r}px, Ideal cell: ${l}px`),this.gridState.size<=4?(this.cellSize=l,this.isScrollable=!1,console.log(`Grid ${this.gridState.size}×${this.gridState.size} fits normally: cellSize=${this.cellSize}px`)):l<x.MIN_CELL_SIZE?(this.cellSize=x.MIN_CELL_SIZE,this.isScrollable=!0,console.log(`Grid ${this.gridState.size}×${this.gridState.size} requires scrolling: cellSize=${this.cellSize}px`)):(this.cellSize=l,this.isScrollable=!1,console.log(`Grid ${this.gridState.size}×${this.gridState.size} fits normally: cellSize=${this.cellSize}px`));const a=this.cellSize*this.gridState.size;this.isScrollable?(this.gridOffset.x=Math.max(2,(e.width-a)/2),this.gridOffset.y=20):(this.gridOffset.x=(e.width-a)/2,this.gridOffset.y=i),this.canvas.style.cursor=this.isScrollable?"grab":"pointer",this.gridWidth=this.cellSize*this.gridState.size,this.onGridWidthChange&&this.onGridWidthChange(this.gridWidth)}setupPanningEvents(){this.canvas.addEventListener("mousedown",this.handlePanStart.bind(this)),this.canvas.addEventListener("mousemove",this.handlePanMove.bind(this)),this.canvas.addEventListener("mouseup",this.handlePanEnd.bind(this)),this.canvas.addEventListener("mouseleave",this.handlePanEnd.bind(this)),this.canvas.addEventListener("touchstart",this.handleTouchStart.bind(this)),this.canvas.addEventListener("touchmove",this.handleTouchMove.bind(this)),this.canvas.addEventListener("touchend",this.handleTouchEnd.bind(this))}handlePanStart(e){this.isScrollable&&(this.panStartPoint={x:e.clientX,y:e.clientY},this.lastPanPoint={x:e.clientX,y:e.clientY},this.panDistance=0,this.isPanning=!1)}handlePanMove(e){if(!this.isScrollable||!this.lastPanPoint||!this.panStartPoint)return;const t=e.clientX-this.panStartPoint.x,i=e.clientY-this.panStartPoint.y;if(this.panDistance=Math.sqrt(t*t+i*i),this.panDistance>x.PAN_THRESHOLD&&!this.isPanning&&(this.isPanning=!0,this.canvas.style.cursor="grabbing"),this.isPanning){const n=e.clientX-this.lastPanPoint.x,s=e.clientY-this.lastPanPoint.y;this.updatePanOffset(n,s)}this.lastPanPoint={x:e.clientX,y:e.clientY}}handlePanEnd(){if(!this.isScrollable)return;const e=this.isPanning;return this.isPanning=!1,this.lastPanPoint=null,this.panStartPoint=null,this.panDistance=0,this.canvas.style.cursor=this.isScrollable?"grab":"pointer",e}handleTouchStart(e){if(!this.isScrollable)return;const t=e.touches[0];this.panStartPoint={x:t.clientX,y:t.clientY},this.lastPanPoint={x:t.clientX,y:t.clientY},this.panDistance=0,this.isPanning=!1}handleTouchMove(e){if(!this.isScrollable||!this.lastPanPoint||!this.panStartPoint)return;const t=e.touches[0],i=t.clientX-this.panStartPoint.x,n=t.clientY-this.panStartPoint.y;if(this.panDistance=Math.sqrt(i*i+n*n),this.panDistance>x.PAN_THRESHOLD&&!this.isPanning&&(this.isPanning=!0,e.preventDefault()),this.isPanning){e.preventDefault();const s=t.clientX-this.lastPanPoint.x,o=t.clientY-this.lastPanPoint.y;this.updatePanOffset(s,o)}this.lastPanPoint={x:t.clientX,y:t.clientY}}handleTouchEnd(e){if(!this.isScrollable)return;const t=this.isPanning;return t&&e.preventDefault(),this.isPanning=!1,this.lastPanPoint=null,this.panStartPoint=null,this.panDistance=0,t}updatePanOffset(e,t){const i=this.canvas.getBoundingClientRect(),n=this.cellSize*this.gridState.size,s=this.cellSize*this.gridState.size,o=10,r=Math.max(0,n-i.width+o*2),l=Math.max(0,s-i.height+o*2);this.panOffset.x=Math.max(-r,Math.min(0,this.panOffset.x+e)),this.panOffset.y=Math.max(-l,Math.min(0,this.panOffset.y+t)),this.render()}render(){this.clear(),this.drawBackground(),this.drawGrid(),this.drawForbiddenSquares(),this.drawForcedMoves(),this.drawNeighbors(),this.drawConstraintLines(),this.drawConstraintWarnings()}clear(){this.ctx.clearRect(0,0,this.canvas.width,this.canvas.height)}drawBackground(){this.theme.backgroundColor&&(this.ctx.fillStyle=this.theme.backgroundColor,this.ctx.fillRect(0,0,this.canvas.width,this.canvas.height))}drawGrid(){this.ctx.strokeStyle=this.theme.gridLineColor,this.ctx.lineWidth=this.theme.gridLineWidth;const e=this.cellSize*this.gridState.size,t=this.gridOffset.x+this.panOffset.x,i=this.gridOffset.y+this.panOffset.y;for(let n=0;n<=this.gridState.size;n++){const s=n*this.cellSize;this.ctx.beginPath(),this.ctx.moveTo(t+s,i),this.ctx.lineTo(t+s,i+e),this.ctx.stroke(),this.ctx.beginPath(),this.ctx.moveTo(t,i+s),this.ctx.lineTo(t+e,i+s),this.ctx.stroke()}}drawForbiddenSquares(){if(!this.gridState.forbiddenSquares||this.gridState.forbiddenSquares.size===0)return;const e=this.theme.forbiddenSquareStyle,t=this.theme.forbiddenSquareColor,i=this.theme.forbiddenSquareOpacity;for(const n of this.gridState.forbiddenSquares){const[s,o]=n.split(",").map(Number),r=this.gridOffset.x+this.panOffset.x+o*this.cellSize,l=this.gridOffset.y+this.panOffset.y+s*this.cellSize;switch(this.ctx.save(),this.ctx.globalAlpha=i,e){case"forbidden-overlay":this.drawForbiddenOverlay(r,l,t);break;case"grid-fade":this.drawGridFade(r,l,t);break;case"cross-hatch":this.drawCrossHatch(r,l,t);break}this.ctx.restore()}}drawForbiddenOverlay(e,t,i){this.ctx.fillStyle=i,this.ctx.fillRect(e,t,this.cellSize,this.cellSize)}drawGridFade(e,t,i){this.ctx.fillStyle=i,this.ctx.fillRect(e+1,t+1,this.cellSize-2,this.cellSize-2),this.ctx.strokeStyle=i,this.ctx.lineWidth=1,this.ctx.setLineDash([2,2]),this.ctx.beginPath(),this.ctx.moveTo(e+this.cellSize/2,t),this.ctx.lineTo(e+this.cellSize/2,t+this.cellSize),this.ctx.moveTo(e,t+this.cellSize/2),this.ctx.lineTo(e+this.cellSize,t+this.cellSize/2),this.ctx.stroke(),this.ctx.setLineDash([])}drawCrossHatch(e,t,i){this.ctx.strokeStyle=i,this.ctx.lineWidth=1.5;const n=this.cellSize/6;this.ctx.beginPath();for(let s=0;s<this.cellSize;s+=n)this.ctx.moveTo(e+s,t),this.ctx.lineTo(e+s+this.cellSize,t+this.cellSize);for(let s=0;s<this.cellSize;s+=n)this.ctx.moveTo(e+this.cellSize-s,t),this.ctx.lineTo(e-s,t+this.cellSize);this.ctx.stroke()}drawForcedMoves(){if(!this.gridState.forcedMoves||this.gridState.forcedMoves.size===0||this.gridState.size<=5)return;this.ctx.save();const e="#A8D4A8";for(const t of this.gridState.forcedMoves){const[i,n]=t.split(",").map(Number),s=this.gridOffset.x+this.panOffset.x+n*this.cellSize,o=this.gridOffset.y+this.panOffset.y+i*this.cellSize;this.ctx.fillStyle=e,this.ctx.globalAlpha=.3,this.ctx.fillRect(s,o,this.cellSize,this.cellSize)}this.ctx.restore()}drawNeighbors(){const e=B(this.gridState),t=e?m(e):null;this.ctx.fillStyle=this.theme.neighborColor;for(const i of this.gridState.neighbors){const[n,s]=i.split(",").map(Number),o=this.gridOffset.x+this.panOffset.x+s*this.cellSize+this.cellSize/2,r=this.gridOffset.y+this.panOffset.y+n*this.cellSize+this.cellSize/2,l=Math.min(this.cellSize*this.theme.neighborRadius,25),a=i===t;this.drawNeighborShape(o,r,l,this.theme.neighborStyle,!1,a)}for(const i of this.gridState.prePlacedNeighbors){const[n,s]=i.split(",").map(Number),o=this.gridOffset.x+this.panOffset.x+s*this.cellSize+this.cellSize/2,r=this.gridOffset.y+this.panOffset.y+n*this.cellSize+this.cellSize/2,l=Math.min(this.cellSize*this.theme.neighborRadius,25);this.drawNeighborShape(o,r,l,this.theme.neighborStyle,!0,!1)}}drawNeighborShape(e,t,i,n,s,o=!1){const r=s?this.theme.prePlacedNeighborColor:this.theme.neighborColor,l=s?this.theme.prePlacedNeighborStyle:"solid";if(o&&this.recentNeighborHighlight&&this.drawHighlightEffect(e,t,i,n),n==="circle")this.ctx.beginPath(),this.ctx.arc(e,t,i,0,Math.PI*2),l==="solid"?(this.ctx.fillStyle=r,this.ctx.fill()):l==="outline"?(this.ctx.strokeStyle=r,this.ctx.lineWidth=2,this.ctx.stroke()):l==="filled-outline"&&(this.ctx.fillStyle=r+"40",this.ctx.fill(),this.ctx.strokeStyle=r,this.ctx.lineWidth=2,this.ctx.stroke());else if(n==="rounded-square"){const a=i*1.4,c=a*.2;this.drawRoundedRect(e-a/2,t-a/2,a,a,c),l==="solid"?(this.ctx.fillStyle=r,this.ctx.fill()):l==="outline"?(this.ctx.strokeStyle=r,this.ctx.lineWidth=2,this.ctx.stroke()):l==="filled-outline"&&(this.ctx.fillStyle=r+"40",this.ctx.fill(),this.ctx.strokeStyle=r,this.ctx.lineWidth=2,this.ctx.stroke())}}drawRoundedRect(e,t,i,n,s){this.ctx.beginPath(),this.ctx.moveTo(e+s,t),this.ctx.arcTo(e+i,t,e+i,t+n,s),this.ctx.arcTo(e+i,t+n,e,t+n,s),this.ctx.arcTo(e,t+n,e,t,s),this.ctx.arcTo(e,t,e+i,t,s),this.ctx.closePath()}drawConstraintLines(){if(this.inspectionData){if(this.ctx.save(),this.ctx.lineWidth=this.lineStyles.lineWidth,this.ctx.globalAlpha=this.lineStyles.opacity,"constraintRelationships"in this.inspectionData)for(const e of this.inspectionData.constraintRelationships)this.drawConstraintRelationship(e,this.lineStyles.solidLineColor,this.lineStyles.dashedLineColor);else for(const e of this.inspectionData.causedBy)this.drawConstraintRelationship(e,this.lineStyles.solidLineColor,this.lineStyles.dashedLineColor);this.ctx.restore()}}drawConstraintRelationship(e,t,i){const[n,s]=e.neighborPair,o=this.gridPositionToScreen(n),r=this.gridPositionToScreen(s);this.ctx.strokeStyle=t,this.ctx.setLineDash([]),this.ctx.beginPath(),this.ctx.moveTo(o.x,o.y),this.ctx.lineTo(r.x,r.y),this.ctx.stroke(),this.ctx.strokeStyle=i,this.ctx.setLineDash(this.lineStyles.dashPattern);for(const l of e.forbiddenSquares){const a=this.gridPositionToScreen(l),c=this.getDistance(o,a),g=this.getDistance(r,a),d=c<g?o:r;this.ctx.beginPath(),this.ctx.moveTo(d.x,d.y),this.ctx.lineTo(a.x,a.y),this.ctx.stroke()}this.ctx.setLineDash([])}gridPositionToScreen(e){return{x:this.gridOffset.x+this.panOffset.x+e.col*this.cellSize+this.cellSize/2,y:this.gridOffset.y+this.panOffset.y+e.row*this.cellSize+this.cellSize/2}}getDistance(e,t){const i=e.x-t.x,n=e.y-t.y;return Math.sqrt(i*i+n*n)}screenToGridPosition(e,t){const i=this.canvas.getBoundingClientRect(),n=e-i.left-this.gridOffset.x-this.panOffset.x,s=t-i.top-this.gridOffset.y-this.panOffset.y;if(n<0||s<0)return null;const o=Math.floor(n/this.cellSize),r=Math.floor(s/this.cellSize);return o>=this.gridState.size||r>=this.gridState.size?null:{row:r,col:o}}resize(){this.setupCanvas(),this.calculateDimensions(),this.panOffset={x:0,y:0},this.render()}updateGridState(e){const t=this.gridState.size;this.gridState=e,t!==e.size&&(console.log(`Grid size changed from ${t}×${t} to ${e.size}×${e.size}, recalculating dimensions`),this.calculateDimensions()),this.render()}updateInspectionData(e){this.inspectionData=e,this.render()}updateLineStyles(e){this.lineStyles={...this.lineStyles,...e},this.render()}setTheme(){this.theme=C,this.render()}getCellSize(){return this.cellSize}getIsScrollable(){return this.isScrollable}updateForbiddenSquareStyle(e){if(e.fillColor&&(this.theme={...this.theme,forbiddenSquareColor:e.fillColor,forbiddenSquareOpacity:e.opacity||this.theme.forbiddenSquareOpacity}),e.pattern){const i={solid:"forbidden-overlay","dashed-grid":"grid-fade","diagonal-lines":"cross-hatch"}[e.pattern]||e.pattern;this.theme={...this.theme,forbiddenSquareStyle:i}}this.render()}updateWarningStyle(e){this.warningStyle=e,this.render()}updateRecentNeighborHighlight(e){this.recentNeighborHighlight=e,this.render()}drawHighlightEffect(e,t,i,n){if(this.recentNeighborHighlight){if(this.ctx.save(),this.recentNeighborHighlight.type==="glow"){if(this.ctx.shadowColor=this.recentNeighborHighlight.glowColor||"#8B7355",this.ctx.shadowBlur=this.recentNeighborHighlight.glowRadius||8,this.ctx.globalAlpha=this.recentNeighborHighlight.glowOpacity||.6,this.ctx.beginPath(),n==="circle")this.ctx.arc(e,t,i+2,0,Math.PI*2);else{const s=i*1.4+4,o=s*.2;this.drawRoundedRect(e-s/2,t-s/2,s,s,o)}if(this.ctx.fillStyle=this.recentNeighborHighlight.glowColor||"#8B7355",this.ctx.fill(),this.recentNeighborHighlight.innerGlowColor){if(this.ctx.shadowColor=this.recentNeighborHighlight.innerGlowColor,this.ctx.shadowBlur=this.recentNeighborHighlight.innerGlowRadius||4,this.ctx.beginPath(),n==="circle")this.ctx.arc(e,t,i+1,0,Math.PI*2);else{const s=i*1.4+2,o=s*.2;this.drawRoundedRect(e-s/2,t-s/2,s,s,o)}this.ctx.fillStyle=this.recentNeighborHighlight.innerGlowColor,this.ctx.fill()}}else if(this.recentNeighborHighlight.type==="border"){if(this.ctx.strokeStyle=this.recentNeighborHighlight.borderColor||"#A0522D",this.ctx.lineWidth=this.recentNeighborHighlight.borderWidth||3,this.ctx.globalAlpha=this.recentNeighborHighlight.borderOpacity||.9,this.ctx.beginPath(),n==="circle")this.ctx.arc(e,t,i+(this.recentNeighborHighlight.borderWidth||3)/2,0,Math.PI*2);else{const s=i*1.4+(this.recentNeighborHighlight.borderWidth||3),o=s*.2;this.drawRoundedRect(e-s/2,t-s/2,s,s,o)}this.ctx.stroke()}else if(this.recentNeighborHighlight.type==="square"){const s=this.cellSize/2,o=e-s,r=t-s;this.ctx.fillStyle=this.recentNeighborHighlight.backgroundColor||"#D4C4A8",this.ctx.globalAlpha=this.recentNeighborHighlight.backgroundOpacity||.4,this.ctx.fillRect(o,r,this.cellSize,this.cellSize),this.recentNeighborHighlight.borderColor&&(this.recentNeighborHighlight.borderWidth||0)>0&&(this.ctx.strokeStyle=this.recentNeighborHighlight.borderColor,this.ctx.lineWidth=this.recentNeighborHighlight.borderWidth||2,this.ctx.globalAlpha=this.recentNeighborHighlight.borderOpacity||.6,this.ctx.strokeRect(o,r,this.cellSize,this.cellSize))}this.ctx.restore()}}clearConstraintWarnings(){const e=document.getElementById("constraint-warning-indicator");e&&e.remove()}updateThemeColors(e){this.theme={...this.theme,...e.backgroundColor&&{backgroundColor:e.backgroundColor},...e.gridLineColor&&{gridLineColor:e.gridLineColor},...e.neighborColor&&{neighborColor:e.neighborColor}},this.render()}updatePrePlacedStyle(e){this.theme={...this.theme,prePlacedNeighborStyle:e},this.render()}drawConstraintWarnings(){const e=document.getElementById("constraint-warning-indicator");if(!this.gridState.constraintWarning){e&&e.remove();return}const{overConstrainedRows:t,overConstrainedColumns:i}=this.gridState.constraintWarning;if(t.length>0||i.length>0){if(!e)switch(this.warningStyle){case"modal":this.drawGameplayStoppingAlert(t,i);break;case"indicator":this.drawWarningIndicator(t,i);break;case"headers":this.drawOverconstrainedHighlights(t,i);break;default:this.drawWarningIndicator(t,i)}}else e&&e.remove()}drawGameplayStoppingAlert(e,t){const i=document.createElement("div");i.id="constraint-warning-indicator",i.style.cssText=`
      position: fixed;
      top: 0;
      left: 0;
      width: 100vw;
      height: 100vh;
      background: rgba(139, 115, 85, 0.9);
      display: flex;
      align-items: center;
      justify-content: center;
      z-index: 10000;
      font-family: system-ui, sans-serif;
    `;const n=document.createElement("div");n.style.cssText=`
      background: #faf7f2;
      color: #5d4e37;
      padding: 30px;
      border-radius: 12px;
      border: 3px solid #8B7355;
      text-align: center;
      max-width: 400px;
      margin: 20px;
      box-shadow: 0 10px 30px rgba(0,0,0,0.3);
      position: relative;
    `;const s=e.length>0?`row${e.length>1?"s":""} ${e.map(c=>c+1).join(", ")}`:"",o=t.length>0?`column${t.length>1?"s":""} ${t.map(c=>String.fromCharCode(65+c)).join(", ")}`:"",r=[s,o].filter(Boolean).join(" and ");n.innerHTML=`
      <h3 style="margin: 0 0 15px 0; font-size: 1.3rem; color: #8B7355;">Puzzle Cannot Be Completed!</h3>
      <p style="margin: 0 0 15px 0; line-height: 1.4;">Some ${r} cannot fit the required 2 neighbors.</p>
      <p style="margin: 0 0 20px 0; font-style: italic; opacity: 0.8;">Try undoing your last move or reset the puzzle</p>
      <button id="dismiss-warning" style="
        background: #D2691E;
        color: white;
        border: none;
        padding: 12px 24px;
        border-radius: 6px;
        font-size: 1rem;
        cursor: pointer;
        font-weight: 500;
        transition: background 0.2s;
      " onmouseover="this.style.background='#B8601E'" onmouseout="this.style.background='#D2691E'">Continue Playing</button>
    `,i.appendChild(n),document.body.appendChild(i);const l=n.querySelector("#dismiss-warning");l&&l.addEventListener("click",c=>{c.preventDefault(),c.stopPropagation(),i.remove()}),i.addEventListener("click",c=>{c.target===i&&i.remove()});const a=c=>{c.key==="Escape"&&document.body.contains(i)&&(i.remove(),document.removeEventListener("keydown",a))};document.addEventListener("keydown",a)}drawWarningIndicator(e,t){this.ctx.save();const i=32,n=this.gridOffset.x+this.panOffset.x,s=this.gridOffset.y+this.panOffset.y,o=Math.max(10,n-i-10),r=s;this.ctx.fillStyle="#D2691E",this.ctx.beginPath(),this.ctx.moveTo(o+i/2,r),this.ctx.lineTo(o,r+i),this.ctx.lineTo(o+i,r+i),this.ctx.closePath(),this.ctx.fill(),this.ctx.strokeStyle="#8B7355",this.ctx.lineWidth=2,this.ctx.stroke(),this.ctx.fillStyle="#faf7f2",this.ctx.font="bold 18px sans-serif",this.ctx.textAlign="center",this.ctx.textBaseline="middle",this.ctx.fillText("!",o+i/2,r+i*.7),this.ctx.restore(),setTimeout(()=>{const l=document.createElement("div");l.id="constraint-warning-indicator",l.style.cssText=`
        position: absolute;
        left: ${o}px;
        top: ${r}px;
        width: ${i}px;
        height: ${i}px;
        cursor: pointer;
        z-index: 100;
        pointer-events: none; /* Prevent any interaction events that might trigger re-renders */
      `;const a=e.length>0?`row${e.length>1?"s":""} ${e.join(", ")}`:"",c=t.length>0?`column${t.length>1?"s":""} ${t.join(", ")}`:"",g=[a,c].filter(Boolean).join(" and ");l.title=`Warning: This puzzle state cannot be completed. Some ${g} cannot fit the required 2 neighbors.`;const d=this.canvas.getBoundingClientRect(),S=d.left+o,b=d.top+r;l.style.left=S+"px",l.style.top=b+"px",document.body.appendChild(l)},0)}drawOverconstrainedHighlights(e,t){this.ctx.save();const i=this.gridOffset.x+this.panOffset.x,n=this.gridOffset.y+this.panOffset.y;this.ctx.lineWidth=3;const s=new Set,o=(d,S,b,u)=>`${d},${S}-${b},${u}`,r=(d,S,b,u)=>{const p=o(d,S,b,u);s.has(p)||(this.ctx.moveTo(d,S),this.ctx.lineTo(b,u),s.add(p))},l=e.map(d=>({type:"row",index:d})),a=t.map(d=>({type:"column",index:d})),c=[],g=Math.max(l.length,a.length);for(let d=0;d<g;d++)d<l.length&&c.push(l[d]),d<a.length&&c.push(a[d]);c.forEach((d,S)=>{if(S===0?this.ctx.strokeStyle="#CD853F":this.ctx.strokeStyle="#B8B8B8",this.ctx.beginPath(),d.type==="row"){const b=d.index,u=n+b*this.cellSize;for(let p=0;p<this.gridState.size;p++){const f=i+p*this.cellSize,z=p===0,w=p===this.gridState.size-1;r(f,u,f+this.cellSize,u),r(f,u+this.cellSize,f+this.cellSize,u+this.cellSize),z&&r(f,u,f,u+this.cellSize),w&&r(f+this.cellSize,u,f+this.cellSize,u+this.cellSize)}s.add(o(i,u,i+this.gridState.size*this.cellSize,u)),s.add(o(i,u+this.cellSize,i+this.gridState.size*this.cellSize,u+this.cellSize));for(let p=0;p<=this.gridState.size;p++){const f=i+p*this.cellSize;s.add(o(f,u,f,u+this.cellSize))}}else{const b=d.index,u=i+b*this.cellSize;for(let p=0;p<this.gridState.size;p++){const f=n+p*this.cellSize,z=p===0,w=p===this.gridState.size-1;r(u,f,u,f+this.cellSize),r(u+this.cellSize,f,u+this.cellSize,f+this.cellSize),z&&r(u,f,u+this.cellSize,f),w&&r(u,f+this.cellSize,u+this.cellSize,f+this.cellSize)}s.add(o(u,n,u,n+this.gridState.size*this.cellSize)),s.add(o(u+this.cellSize,n,u+this.cellSize,n+this.gridState.size*this.cellSize));for(let p=0;p<=this.gridState.size;p++){const f=n+p*this.cellSize;s.add(o(u,f,u+this.cellSize,f))}}this.ctx.stroke()}),this.ctx.restore()}getGridWidth(){return this.gridWidth}setGridWidthCallback(e){this.onGridWidthChange=e}};x.PAN_THRESHOLD=10,x.MIN_CELL_SIZE=44;let N=x;class q{constructor(){this.currentPuzzle=null,this.counterElement=document.getElementById("counter-display"),this.levelElement=document.getElementById("level-display"),this.statusBarElement=document.getElementById("status-bar"),this.config={counterStyle:"with-label",levelStyle:"friendly"},(!this.counterElement||!this.levelElement||!this.statusBarElement)&&console.error("StatusBar: Required DOM elements not found")}updateCounter(e,t){if(this.counterElement)switch(this.config.counterStyle){case"number-only":this.counterElement.innerHTML=`<span style="font-weight: 600;">${e}</span><span style="font-weight: 400; opacity: 0.8;">/${t}</span>`;break;case"with-label":const i=e===1?"neighbor":"neighbors";this.counterElement.innerHTML=`<span style="font-weight: 600;">${e}</span><span style="font-weight: 400; opacity: 0.8;">/${t} ${i} left</span>`;break;case"with-icon":this.counterElement.innerHTML=`👥 <span style="font-weight: 600;">${e}</span><span style="font-weight: 400; opacity: 0.8;">/${t}</span>`;break;default:const n=e===1?"neighbor":"neighbors";this.counterElement.innerHTML=`<span style="font-weight: 600;">${e}</span><span style="font-weight: 400; opacity: 0.8;">/${t} ${n} left</span>`;break}}updateLevel(e){if(!this.levelElement)return;this.currentPuzzle=e;let t="";switch(this.config.levelStyle){case"id-only":t=`${e.size}x${e.size}-${(e.metadata?.index||1).toString().padStart(3,"0")}`;break;case"friendly":t=`Level ${e.metadata?.index||1}`;break;case"compact":t=`#${e.metadata?.index||1}`;break}this.levelElement.textContent=t}updateStyle(e){this.config={...this.config,...e},e.backgroundColor&&(this.statusBarElement.style.backgroundColor=e.backgroundColor),e.borderColor&&(this.statusBarElement.style.borderColor=e.borderColor),e.textColor&&(this.statusBarElement.style.color=e.textColor,[this.counterElement,this.levelElement].forEach(t=>{t&&(t.style.color=e.textColor)})),this.currentPuzzle&&this.updateLevel(this.currentPuzzle)}calculateRemainingNeighbors(e,t){const i=e.size*2,n=e.prePlacedNeighbors.length;return i-n-t}hide(){this.statusBarElement.style.display="none"}show(){this.statusBarElement.style.display="flex"}setWidth(e){this.statusBarElement.style.width=`${e}px`}}class W{constructor(){this.element=null,this.config=null,this.isVisible=!1}show(e){this.config=e,this.isVisible=!0,this.render()}hide(){this.isVisible=!1,this.element&&this.element.parentElement&&(this.element.parentElement.removeChild(this.element),this.element=null),this.config=null}isShowing(){return this.isVisible}getConfig(){return this.config}render(){if(!this.config)return;this.element&&document.body.removeChild(this.element);const e=document.getElementById("game-canvas");if(!e||!e.parentElement)return;this.element=document.createElement("div"),this.element.className="modal-overlay";const t=e.parentElement;getComputedStyle(t).position==="static"&&(t.style.position="relative"),t.appendChild(this.element);const i=document.createElement("div");i.className="modal-content",this.config.maxWidth&&(i.style.maxWidth=`${this.config.maxWidth}px`);const n=document.createElement("h2");n.textContent=this.config.title,n.className="modal-title";const s=document.createElement("p");if(s.innerHTML=this.config.message.replace(/\*\*(.*?)\*\*/g,"<strong>$1</strong>"),s.className="modal-message",i.appendChild(n),i.appendChild(s),this.config.primaryButton){const o=document.createElement("button");o.textContent=this.config.primaryButton.text,o.onclick=this.config.primaryButton.onClick;const r=this.config.primaryButton.style==="secondary";o.className=`modal-button ${r?"modal-button-secondary":"modal-button-primary"}`,i.appendChild(o)}if(this.config.secondaryButton){const o=document.createElement("button");o.textContent=this.config.secondaryButton.text,o.onclick=this.config.secondaryButton.onClick;const r=this.config.secondaryButton.style==="secondary";o.className=`modal-button ${r?"modal-button-secondary":"modal-button-primary"}`,i.appendChild(o)}this.element.appendChild(i),this.config.onDismiss&&this.element.addEventListener("click",o=>{o.target===this.element&&this.config?.onDismiss&&this.config.onDismiss()})}}class M{constructor(e){this.gridSize=e}calculateForbiddenSquares(e){if(e.size<2)return new Set;const t=Array.from(e).map(n=>{const[s,o]=n.split(",").map(Number);return{row:s,col:o}}),i=new Set;for(let n=0;n<t.length;n++)for(let s=n+1;s<t.length;s++){const o=t[n],r=t[s],l=this.getLineFromTwoPoints(o,r),a=this.findGridPositionsOnLine(l);for(const c of a){const g=m(c);e.has(g)||i.add(g)}}return i}findGridPositionsOnLine(e){const t=[],{rise:i,run:n,yIntWhole:s}=e;if(i===1&&n===0){const o=s;if(o>=0&&o<this.gridSize)for(let r=0;r<this.gridSize;r++)t.push({row:r,col:o});return t}if(i===0&&n===1){const o=s;if(o>=0&&o<this.gridSize)for(let r=0;r<this.gridSize;r++)t.push({row:o,col:r});return t}for(let o=0;o<this.gridSize;o++)for(let r=0;r<this.gridSize;r++)this.isPointOnLine({row:o,col:r},e)&&t.push({row:o,col:r});return t}getLineFromTwoPoints(e,t){const i=t.col-e.col,n=t.row-e.row;if(i===0)return{rise:1,run:0,yIntWhole:e.col,yIntNum:0,yIntDenom:1};if(n===0)return{rise:0,run:1,yIntWhole:e.row,yIntNum:0,yIntDenom:1};const s=this.gcd(Math.abs(n),Math.abs(i));let o=n/s,r=i/s;(r<0||r===0&&o<0)&&(o=-o,r=-r);const l=e.row*r-o*e.col,a=r,c=Math.floor(l/a),g=(l%a+a)%a,d=Math.abs(a);return{rise:o,run:r,yIntWhole:c,yIntNum:g,yIntDenom:d}}isPointOnLine(e,t){const{rise:i,run:n,yIntWhole:s,yIntNum:o,yIntDenom:r}=t;if(i===1&&n===0)return e.col===s;if(i===0&&n===1)return e.row===s;const l=e.row*n*r,a=i*e.col*r+s*n*r+o*n;return l===a}getInspectionData(e,t){const i=m(e),n=Array.from(t).map(o=>{const[r,l]=o.split(",").map(Number);return{row:r,col:l}}),s=[];for(const o of n){if(m(o)===i)continue;const l=this.getLineFromTwoPoints(e,o),a=this.findGridPositionsOnLine(l).filter(c=>{const g=m(c);return!t.has(g)});s.push({neighborPair:[e,o],line:l,forbiddenSquares:a})}return{inspectedNeighbor:e,constraintRelationships:s}}getForbiddenSquareInfo(e,t){const i=Array.from(t).map(s=>{const[o,r]=s.split(",").map(Number);return{row:o,col:r}}),n=[];for(let s=0;s<i.length;s++)for(let o=s+1;o<i.length;o++){const r=i[s],l=i[o],a=this.getLineFromTwoPoints(r,l);if(this.isPointOnLine(e,a)){const c=this.findGridPositionsOnLine(a).filter(g=>{const d=m(g);return!t.has(d)});n.push({neighborPair:[r,l],line:a,forbiddenSquares:c})}}return{position:e,causedBy:n}}analyzeRowColumnConstraints(e,t){const i=Array.from(e).map(r=>{const[l,a]=r.split(",").map(Number);return{row:l,col:a}}),n=[],s=[],o=[];for(let r=0;r<this.gridSize;r++){const l=i.filter(d=>d.row===r).length,a=this.countAvailableSquaresInRow(r,e,t),g=l+a<2;g&&n.push(r),o.push({type:"row",index:r,placedCount:l,availableCount:a,isOverConstrained:g})}for(let r=0;r<this.gridSize;r++){const l=i.filter(d=>d.col===r).length,a=this.countAvailableSquaresInColumn(r,e,t),g=l+a<2;g&&s.push(r),o.push({type:"column",index:r,placedCount:l,availableCount:a,isOverConstrained:g})}return{overConstrainedRows:n,overConstrainedColumns:s,allConstraints:o,hasUnsolvableState:n.length>0||s.length>0}}countAvailableSquaresInRow(e,t,i){let n=0;for(let s=0;s<this.gridSize;s++){const o=m({row:e,col:s});!t.has(o)&&!i.has(o)&&n++}return n}countAvailableSquaresInColumn(e,t,i){let n=0;for(let s=0;s<this.gridSize;s++){const o=m({row:s,col:e});!t.has(o)&&!i.has(o)&&n++}return n}getAvailableSquaresInRow(e,t,i){const n=[];for(let s=0;s<this.gridSize;s++){const o=m({row:e,col:s});!t.has(o)&&!i.has(o)&&n.push({row:e,col:s})}return n}getAvailableSquaresInColumn(e,t,i){const n=[];for(let s=0;s<this.gridSize;s++){const o=m({row:s,col:e});!t.has(o)&&!i.has(o)&&n.push({row:s,col:e})}return n}detectForcedMoves(e,t){const i=Array.from(e).map(o=>{const[r,l]=o.split(",").map(Number);return{row:r,col:l}}),n=[],s=new Set;for(let o=0;o<this.gridSize;o++){const r=i.filter(c=>c.row===o).length,l=this.getAvailableSquaresInRow(o,e,t),a=l.length;if(r===1&&a===1){const c=m(l[0]);s.has(c)||(n.push(l[0]),s.add(c))}else if(r===0&&a===2)for(const c of l){const g=m(c);s.has(g)||(n.push(c),s.add(g))}}for(let o=0;o<this.gridSize;o++){const r=i.filter(c=>c.col===o).length,l=this.getAvailableSquaresInColumn(o,e,t),a=l.length;if(r===1&&a===1){const c=m(l[0]);s.has(c)||(n.push(l[0]),s.add(c))}else if(r===0&&a===2)for(const c of l){const g=m(c);s.has(g)||(n.push(c),s.add(g))}}return n}gcd(e,t){for(;t!==0;){const i=t;t=e%t,e=i}return e}}class R{constructor(e,t=4,i){this.puzzleState=null,this.gridState=I(t),this.canvas=e,this.renderer=new N(e,this.gridState),this.statusBar=new q,this.onNextLevel=i?.onNextLevel,this.getCurrentLevelIndex=i?.getCurrentLevelIndex,this.hasNextLevel=i?.hasNextLevel,this.renderer.setGridWidthCallback(n=>{this.statusBar.setWidth(n)}),this.modal=new W,this.lineDetector=new M(t),this.setupEventListeners(),this.render()}setupEventListeners(){this.canvas.addEventListener("click",e=>{this.handleCellClick(e.clientX,e.clientY)}),document.addEventListener("click",e=>{this.canvas.contains(e.target)||this.clearInspectMode()}),window.addEventListener("resize",()=>{this.renderer.resize()})}handleCellClick(e,t){const i=this.renderer.screenToGridPosition(e,t);if(!i){this.clearInspectMode();return}const n=m(i),s=this.gridState.prePlacedNeighbors.has(n),o=this.gridState.neighbors.has(n),r=this.gridState.forbiddenSquares.has(n),l=this.gridState.inspectionMode&&m(this.gridState.inspectionMode.position)===n,a=B(this.gridState),c=a&&i.row===a.row&&i.col===a.col;if(this.gridState.constraintWarning&&!o){this.showOverconstrainedModal();return}if(s)l?this.clearInspectMode():this.enterNeighborInspectMode(i);else if(o){const g=this.modal.isShowing()&&this.modal.getConfig()?.title==="Uh-oh";c&&(!this.modal.isShowing()||g)?this.removeNeighbor(i):l&&(!this.modal.isShowing()||g)?this.removeNeighbor(i):l&&this.modal.isShowing()?this.clearInspectMode():this.enterNeighborInspectMode(i)}else r?l?this.clearInspectMode():this.enterForbiddenSquareInspectMode(i):this.placeNeighbor(i)}placeNeighbor(e){if(this.gridState.constraintWarning){this.render();return}const t=m(e);this.gridState.neighbors.add(t),this.gridState.moveHistory.push(e),this.updateForbiddenSquares(),this.updateStatusBar(),this.checkWinCondition(),this.gridState.isComplete||this.enterNeighborInspectMode(e)}removeNeighbor(e){const t=m(e);this.gridState.neighbors.delete(t),this.gridState.moveHistory=this.gridState.moveHistory.filter(i=>!(i.row===e.row&&i.col===e.col)),this.updateForbiddenSquares(),this.updateStatusBar(),this.checkWinCondition(),this.clearInspectMode(),this.modal.isShowing()&&this.modal.hide(),this.render()}showOverconstrainedModal(){if(!this.gridState.constraintWarning)return;const{overConstrainedRows:e,overConstrainedColumns:t}=this.gridState.constraintWarning,i=this.generateOverconstrainedMessage(e,t);this.modal.show({title:"Uh-oh",message:i,onDismiss:()=>this.modal.hide(),maxWidth:this.renderer.getGridWidth()})}generateOverconstrainedMessage(e,t){let i="",n=!1,s="";return e.length>0?(i=`Row ${e[0]+1}`,n=e.length>1||t.length>0):t.length>0&&(i=`Column ${t[0]+1}`,n=t.length>1),n?(s="don't",i=`**${i} (and others)**`):(s="doesn't",i=`**${i}**`),`${i} ${s} have enough squares available to place 2 neighbors. To make progress, remove a neighbor and backtrack.`}checkWinCondition(){if(!this.puzzleState)return;const e=this.gridState.prePlacedNeighbors.size+this.gridState.neighbors.size,t=this.gridState.size*2;if(e===t){const i=new Set([...this.gridState.neighbors,...this.gridState.prePlacedNeighbors]),n=this.lineDetector.calculateForbiddenSquares(i);Array.from(i).some(o=>n.has(o))||(this.gridState.isComplete=!0,this.clearInspectMode(),this.saveCompletionState(),this.showSuccessModal(),this.render())}else this.gridState.isComplete=!1}showSuccessModal(){if(!this.puzzleState)return;const e=this.gridState.size*2,t=this.getCurrentLevelIndex?this.getCurrentLevelIndex()+1:1,i=this.hasNextLevel?this.hasNextLevel():!1;this.modal.show({title:`Level ${t} - Success!`,message:`You placed all ${e}/${e} neighbors. Everyone can see everyone else. Click a neighbor to see their view.`,primaryButton:i?{text:"Next level",style:"primary",onClick:()=>{this.modal.hide(),this.onNextLevel&&this.onNextLevel()}}:{text:"Play this level again",style:"primary",onClick:()=>{this.modal.hide(),this.clearGrid(),this.render()}},secondaryButton:i?{text:"Play this level again",style:"secondary",onClick:()=>{this.modal.hide(),this.clearGrid(),this.render()}}:void 0,allowInspectMode:!0,preventNeighborRemoval:!0,maxWidth:this.renderer.getGridWidth()})}enterNeighborInspectMode(e){this.gridState.inspectionMode={type:"neighbor",position:e},this.render()}enterForbiddenSquareInspectMode(e){this.gridState.inspectionMode={type:"forbidden-square",position:e},this.render()}clearInspectMode(){this.gridState.inspectionMode=void 0,this.render()}updateForbiddenSquares(){const e=new Set([...this.gridState.neighbors,...this.gridState.prePlacedNeighbors]);this.gridState.forbiddenSquares=this.lineDetector.calculateForbiddenSquares(e);const t=this.lineDetector.detectForcedMoves(e,this.gridState.forbiddenSquares);this.gridState.forcedMoves=new Set(t.map(m));const i=this.lineDetector.analyzeRowColumnConstraints(e,this.gridState.forbiddenSquares);i.hasUnsolvableState?this.gridState.constraintWarning={overConstrainedRows:i.overConstrainedRows,overConstrainedColumns:i.overConstrainedColumns}:this.gridState.constraintWarning=void 0}updateStatusBar(){if(!this.puzzleState)return;const e=this.gridState.neighbors.size,t=this.statusBar.calculateRemainingNeighbors(this.puzzleState.config,e);this.statusBar.updateCounter(t,this.puzzleState.config.size*2)}render(){this.renderer.updateGridState(this.gridState),this.renderer.updateInspectionData(this.getInspectionData())}getGridState(){return{...this.gridState,neighbors:new Set(this.gridState.neighbors),prePlacedNeighbors:new Set(this.gridState.prePlacedNeighbors),forbiddenSquares:new Set(this.gridState.forbiddenSquares),forcedMoves:new Set(this.gridState.forcedMoves),moveHistory:[...this.gridState.moveHistory]}}setGridState(e){this.gridState=e,this.updateForbiddenSquares(),this.clearInspectMode(),this.render()}clearGrid(){this.gridState.neighbors.clear(),this.gridState.moveHistory=[],this.updateForbiddenSquares(),this.clearInspectMode()}loadPuzzle(e){this.modal.hide(),this.gridState=I(e.size),this.lineDetector=new M(e.size);for(const n of e.prePlacedNeighbors){const s=m(n);this.gridState.prePlacedNeighbors.add(s)}this.puzzleState={config:e,playerPlacedNeighbors:new Set,isComplete:!1},this.statusBar.updateLevel(e),this.updateForbiddenSquares(),this.updateStatusBar();const i=this.getCompletedPuzzles()[e.id];i?.completed&&(this.gridState.neighbors=new Set(i.playerNeighbors),this.updateForbiddenSquares(),this.updateStatusBar(),this.checkWinCondition()),this.clearInspectMode()}getInspectionData(){if(!this.gridState.inspectionMode)return null;const e=new Set([...this.gridState.neighbors,...this.gridState.prePlacedNeighbors]);return this.gridState.inspectionMode.type==="neighbor"?this.lineDetector.getInspectionData(this.gridState.inspectionMode.position,e):this.lineDetector.getForbiddenSquareInfo(this.gridState.inspectionMode.position,e)}getPuzzleState(){return this.puzzleState}setTheme(){this.renderer.setTheme()}getRenderer(){return this.renderer}getStatusBar(){return this.statusBar}getModal(){return this.modal}saveCompletionState(){if(this.puzzleState)try{const e=this.getCompletedPuzzles(),t={playerNeighbors:[...this.gridState.neighbors],completed:!0};e[this.puzzleState.config.id]=t,sessionStorage.setItem("nebby-completed-puzzles",JSON.stringify(e))}catch(e){console.warn("Could not save completion state:",e)}}getCompletedPuzzles(){try{const e=sessionStorage.getItem("nebby-completed-puzzles");if(e){const t=JSON.parse(e);return Array.isArray(t)?(sessionStorage.removeItem("nebby-completed-puzzles"),{}):t}}catch(e){console.warn("Could not load completion state:",e)}return{}}}const H="modulepreload",A=function(h){return"/nebbyneighbor/"+h},O={},v=function(e,t,i){let n=Promise.resolve();if(t&&t.length>0){let a=function(c){return Promise.all(c.map(g=>Promise.resolve(g).then(d=>({status:"fulfilled",value:d}),d=>({status:"rejected",reason:d}))))};var o=a;document.getElementsByTagName("link");const r=document.querySelector("meta[property=csp-nonce]"),l=r?.nonce||r?.getAttribute("nonce");n=a(t.map(c=>{if(c=A(c),c in O)return;O[c]=!0;const g=c.endsWith(".css"),d=g?'[rel="stylesheet"]':"";if(document.querySelector(`link[href="${c}"]${d}`))return;const S=document.createElement("link");if(S.rel=g?"stylesheet":H,g||(S.as="script"),S.crossOrigin="",S.href=c,l&&S.setAttribute("nonce",l),document.head.appendChild(S),g)return new Promise((b,u)=>{S.addEventListener("load",b),S.addEventListener("error",()=>u(new Error(`Unable to preload CSS for ${c}`)))})}))}function s(r){const l=new Event("vite:preloadError",{cancelable:!0});if(l.payload=r,window.dispatchEvent(l),!l.defaultPrevented)throw r}return n.then(r=>{for(const l of r||[])l.status==="rejected"&&s(l.reason);return e().catch(s)})},_=(h,e,t)=>{const i=h[e];return i?typeof i=="function"?i():Promise.resolve(i):new Promise((n,s)=>{(typeof queueMicrotask=="function"?queueMicrotask:setTimeout)(s.bind(null,new Error("Unknown variable dynamic import: "+e+(e.split("/").length!==t?". Note that variables only represent file names one level deep.":""))))})};class G{constructor(e){this.config=null,this.devContainer=null,this.issueNumber=e}async initialize(){try{const e=await _(Object.assign({"../../docs/development/issue-13/config.js":()=>v(()=>import("./config-B4PTg7Uw.js"),[]),"../../docs/development/issue-18/config.js":()=>v(()=>import("./config-C7D3VtPZ.js"),[]),"../../docs/development/issue-2/config.js":()=>v(()=>import("./config-D_IUL5fB.js"),[]),"../../docs/development/issue-4/config.js":()=>v(()=>import("./config-1AtKQntM.js"),[]),"../../docs/development/issue-5/config.js":()=>v(()=>import("./config-3xBEA5IV.js"),[]),"../../docs/development/issue-6/config.js":()=>v(()=>import("./config-SOSqqrOq.js"),[]),"../../docs/development/issue-7/config.js":()=>v(()=>import("./config-BBJe7UP4.js"),[]),"../../docs/development/issue-8/config.js":()=>v(()=>import("./config-Yiirb968.js"),[])}),`../../docs/development/issue-${this.issueNumber}/config.js`,6);return this.config=e.issueConfig,this.config&&(this.injectDevUI(),this.setupEventListeners()),this.config}catch(e){return console.warn(`No dev config found for issue ${this.issueNumber}:`,e),null}}injectDevUI(){if(!this.config)return;this.devContainer=document.createElement("div"),this.devContainer.id="dev-overlay",this.devContainer.innerHTML=`
      <div class="dev-header">
        <h2>${this.config.title}</h2>
        <p>${this.config.description}</p>
        <div class="dev-badge">Development Mode: Issue #${this.issueNumber}</div>
      </div>
      <div class="dev-controls">
        ${this.renderControls()}
      </div>
    `,this.injectStyles();const e=document.getElementById("game-container");e&&e.parentNode&&e.parentNode.insertBefore(this.devContainer,e)}renderControls(){if(!this.config?.devFeatures)return"";let e="";return this.config.devFeatures.themeSelector&&this.config.themeVariants&&(e+=`
        <div class="dev-control-group">
          <label for="theme-select">Constraint Visualization Style:</label>
          <select id="theme-select">
            ${Object.entries(this.config.themeVariants).map(([t,i])=>`<option value="${t}" ${t===this.config?.defaultTheme?"selected":""}>
                ${i.name}
              </option>`).join("")}
          </select>
          <small id="theme-description">${this.getThemeDescription(this.config.defaultTheme||"")}</small>
        </div>
      `),this.config.devFeatures.resetButton&&(e+=`
        <div class="dev-control-group">
          <button id="reset-puzzle">Reset Puzzle</button>
        </div>
      `),this.config.devFeatures.debugInfo&&(e+=`
        <div class="dev-control-group">
          <div id="debug-info">
            <strong>Debug Info:</strong>
            <div id="debug-details">Grid ready for testing</div>
          </div>
        </div>
      `),e}getThemeDescription(e){return this.config?.themeVariants?.[e]?.description||""}setupEventListeners(){if(!this.devContainer)return;const e=this.devContainer.querySelector("#theme-select");e&&e.addEventListener("change",i=>{const n=i.target.value,s=this.getThemeDescription(n),o=this.devContainer?.querySelector("#theme-description");o&&(o.textContent=s),window.dispatchEvent(new CustomEvent("dev-theme-change",{detail:{themeKey:n,themeConfig:this.config?.themeVariants?.[n]}}))});const t=this.devContainer.querySelector("#reset-puzzle");t&&t.addEventListener("click",()=>{window.dispatchEvent(new CustomEvent("dev-reset-puzzle"))})}injectStyles(){const e="dev-overlay-styles";if(document.getElementById(e))return;const t=document.createElement("style");t.id=e,t.textContent=`
      #dev-overlay {
        background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);
        color: white;
        padding: 20px;
        margin-bottom: 20px;
        border-radius: 8px;
        box-shadow: 0 4px 12px rgba(0,0,0,0.15);
      }
      
      .dev-header h2 {
        margin: 0 0 8px 0;
        font-size: 1.4rem;
      }
      
      .dev-header p {
        margin: 0 0 12px 0;
        opacity: 0.9;
      }
      
      .dev-badge {
        display: inline-block;
        background: rgba(255,255,255,0.2);
        padding: 4px 12px;
        border-radius: 20px;
        font-size: 0.8rem;
        font-weight: 500;
      }
      
      .dev-controls {
        margin-top: 20px;
        display: flex;
        gap: 20px;
        flex-wrap: wrap;
        align-items: flex-start;
      }
      
      .dev-control-group {
        display: flex;
        flex-direction: column;
        gap: 6px;
      }
      
      .dev-control-group label {
        font-weight: 500;
        font-size: 0.9rem;
      }
      
      .dev-control-group select,
      .dev-control-group button {
        padding: 8px 12px;
        border: none;
        border-radius: 4px;
        background: white;
        color: #333;
        font-size: 0.9rem;
      }
      
      .dev-control-group button {
        background: #ff6b6b;
        color: white;
        cursor: pointer;
        transition: background 0.2s;
      }
      
      .dev-control-group button:hover {
        background: #ee5a5a;
      }
      
      .dev-control-group small {
        opacity: 0.8;
        font-size: 0.8rem;
        font-style: italic;
      }
      
      #debug-info {
        background: rgba(255,255,255,0.1);
        padding: 10px;
        border-radius: 4px;
        font-size: 0.8rem;
      }
      
      #debug-details {
        margin-top: 6px;
        font-family: monospace;
      }
    `,document.head.appendChild(t)}updateDebugInfo(e){const t=this.devContainer?.querySelector("#debug-details");t&&(t.textContent=e)}}const L=[{id:"4x4-overconstrained-test",size:4,prePlacedNeighbors:[{row:1,col:1},{row:1,col:3},{row:3,col:1},{row:3,col:3}],metadata:{symmetryClass:"iden",index:0}},{id:"puzzle-001",size:4,prePlacedNeighbors:[{row:1,col:3},{row:3,col:1},{row:3,col:3}],metadata:{symmetryClass:"iden",index:1}},{id:"puzzle-002",size:4,prePlacedNeighbors:[{row:0,col:2},{row:2,col:0},{row:3,col:2}],metadata:{symmetryClass:"iden",index:2}},{id:"puzzle-003",size:4,prePlacedNeighbors:[{row:0,col:0},{row:1,col:0}],metadata:{symmetryClass:"iden",index:3}},{id:"puzzle-004",size:4,prePlacedNeighbors:[{row:2,col:1},{row:2,col:2}],metadata:{symmetryClass:"iden",index:4}},{id:"puzzle-005",size:5,prePlacedNeighbors:[{row:0,col:1},{row:0,col:3},{row:1,col:1},{row:3,col:2},{row:4,col:4}],metadata:{symmetryClass:"iden",index:5}},{id:"puzzle-006",size:5,prePlacedNeighbors:[{row:0,col:1},{row:0,col:2},{row:1,col:0},{row:1,col:2}],metadata:{symmetryClass:"iden",index:6}},{id:"puzzle-007",size:5,prePlacedNeighbors:[{row:2,col:3},{row:4,col:1},{row:4,col:2}],metadata:{symmetryClass:"iden",index:7}},{id:"puzzle-008",size:5,prePlacedNeighbors:[{row:1,col:4},{row:2,col:4}],metadata:{symmetryClass:"iden",index:8}},{id:"puzzle-009",size:8,prePlacedNeighbors:[{row:7,col:1},{row:3,col:4},{row:4,col:3}],metadata:{symmetryClass:"iden",index:9}}];function F(){return L[0]}function j(h){return L[h]||null}function k(){return L.length}function V(){const h=document.getElementById("levels-link"),e=document.getElementById("levels-explanation");h&&e&&h.addEventListener("click",t=>{t.preventDefault();const i=e.style.display!=="none";e.style.display=i?"none":"block"})}console.log("Nebby Neighbor game initializing...");let y=0,E=null;const Y=new URLSearchParams(window.location.search),P=Y.get("issue");async function X(){const h=document.getElementById("game-container");if(!h){console.error("Game container not found");return}let e=null,t=null;P&&(console.log(`Initializing dev mode for issue ${P}`),t=new G(P),e=await t.initialize());const i=document.createElement("canvas");i.id="game-canvas",i.setAttribute("role","application");const n=h.querySelector("#game-canvas");n&&n.remove(),h.appendChild(i);try{const s=e?.testPuzzle||F();i.setAttribute("aria-label",`${s.size}x${s.size} grid puzzle - click cells to place neighbors`);const o=new R(i,s.size,{onNextLevel:$,getCurrentLevelIndex:()=>y,hasNextLevel:()=>y<k()-1});o.loadPuzzle(s),E=o,t&&e&&K(o,t,e),console.log("Grid controller initialized with puzzle:",s.id),t&&t.updateDebugInfo(`Grid: ${s.size}×${s.size}, Pre-placed: ${s.prePlacedNeighbors.length}`),t||U()}catch(s){console.error("Failed to initialize grid controller:",s),h.innerHTML=`
      <div style="text-align: center; color: #e74c3c;">
        <p>Failed to initialize game</p>
        <p style="font-size: 0.9rem; margin-top: 1rem;">
          ${s instanceof Error?s.message:"Unknown error"}
        </p>
      </div>
    `}}function K(h,e,t){window.addEventListener("dev-theme-change",i=>{const{themeKey:n,themeConfig:s}=i.detail;console.log("Dev theme change:",n,s);const o=h.getRenderer();if(o){if(s?.override){const r=s.override;(r.backgroundColor||r.gridLineColor||r.neighborColor)&&o.updateThemeColors({backgroundColor:r.backgroundColor,gridLineColor:r.gridLineColor,neighborColor:r.neighborColor}),r.prePlacedNeighborStyle&&o.updatePrePlacedStyle(r.prePlacedNeighborStyle),r.warningStyle&&o.updateWarningStyle(r.warningStyle)}if(s?.gridSize){const r={...t.testPuzzle,size:s.gridSize,id:`${s.gridSize}x${s.gridSize}-size-test`};h.loadPuzzle(r),e.updateDebugInfo(`Grid: ${s.gridSize}×${s.gridSize}, Pre-placed: ${r.prePlacedNeighbors?.length||0}`);return}if(s?.forbiddenSquareStyle){o.updateForbiddenSquareStyle(s.forbiddenSquareStyle);const r={solidLineColor:s.forbiddenSquareStyle.solidLineColor||"#8B7355",dashedLineColor:s.forbiddenSquareStyle.dashedLineColor||"#A67C5A",lineWidth:s.forbiddenSquareStyle.lineWidth||2,dashPattern:s.forbiddenSquareStyle.dashPattern||[6,4],opacity:s.forbiddenSquareStyle.opacity||.9};o.updateLineStyles(r)}if(s?.highlightStyle&&o.updateRecentNeighborHighlight(s.highlightStyle),s?.statusBarStyle){const r=h.getStatusBar();r.updateStyle({counterStyle:s.statusBarStyle.counterStyle,levelStyle:s.statusBarStyle.levelStyle,backgroundColor:s.statusBarStyle.backgroundColor,borderColor:s.statusBarStyle.borderColor,textColor:s.statusBarStyle.textColor});const a=h.getGridState().neighbors.size,c=h.getPuzzleState();if(c){const g=r.calculateRemainingNeighbors(c.config,a);r.updateCounter(g,c.config.size*2)}}e.updateDebugInfo(`Theme: ${n} applied`)}}),window.addEventListener("dev-reset-puzzle",()=>{h.loadPuzzle(t.testPuzzle),e.updateDebugInfo("Puzzle reset to initial state")})}function U(){if(!document.getElementById("app"))return;const e=document.getElementById("level-navigation");e&&e.remove();const t=document.createElement("div");t.id="level-navigation",t.style.cssText=`
    display: flex;
    justify-content: center;
    gap: 1rem;
    margin-top: 1rem;
    padding: 1rem;
    flex-shrink: 0;
  `;const i=document.createElement("button");i.textContent="← Back",i.style.cssText=`
    padding: 0.5rem 1rem;
    background: #8B7355;
    color: white;
    border: none;
    border-radius: 4px;
    cursor: pointer;
    font-size: 1rem;
    transition: background-color 0.2s;
  `,i.addEventListener("click",Z),i.addEventListener("mouseenter",()=>{i.style.backgroundColor="#6d5a43"}),i.addEventListener("mouseleave",()=>{i.style.backgroundColor="#8B7355"});const n=document.createElement("button");n.textContent="Forward →",n.style.cssText=`
    padding: 0.5rem 1rem;
    background: #8B7355;
    color: white;
    border: none;
    border-radius: 4px;
    cursor: pointer;
    font-size: 1rem;
    transition: background-color 0.2s;
  `,n.addEventListener("click",$),n.addEventListener("mouseenter",()=>{n.style.backgroundColor="#6d5a43"}),n.addEventListener("mouseleave",()=>{n.style.backgroundColor="#8B7355"}),t.appendChild(i),t.appendChild(n);const s=document.getElementById("game-container");s&&s.parentNode&&s.parentNode.insertBefore(t,s.nextSibling),D()}function D(){const h=document.getElementById("level-navigation");if(!h)return;const e=h.children[0],t=h.children[1];e.style.visibility=y===0?"hidden":"visible",t.style.visibility=y===k()-1?"hidden":"visible"}function Z(){y>0&&(y--,T())}function $(){y<k()-1&&(y++,T())}function T(){const h=j(y);if(!h||!E)return;const e=document.getElementById("game-canvas");e&&e.setAttribute("aria-label",`${h.size}x${h.size} grid puzzle - click cells to place neighbors`),E.loadPuzzle(h),D(),console.log(`Loaded level ${y+1}: ${h.id}`)}X();V();
